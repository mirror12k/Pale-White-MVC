
controller MainController {

	path global {
		action say_hello msg="this is the global path";
	}

	path "/" {
		render MoreTemplate title="My Controller", name="amy", source="jack";
	}

	path "/args/{{title}}/{{source}}" {
		validate title as add_punctuation;
		validate source as source_link;

		action say_hello msg="this is my message";

		render MoreTemplate title=title, name="amy", source=source;
	}

	path "/link/{{link}}" {
		link = model UserLinkModel id=link;
		render LinkTemplate link=link;
	}

	path "/link_by_path" [link_path] {
		link = model UserLinkModel link=link_path;
		render LinkTemplate link=link;
	}

	path "/test/{{...}}" {
		route TestController;
	}

	path "/go_home" {
		status "302 Redirect";
		redirect "/";
	}

	path default {
		status "404 Not Found";
		render NotFoundTemplate;
	}

	validator add_punctuation {{
		return "${value}!";
	}}

	validator source_link {{
		return "http://${value}";
	}}

	action say_hello {{
		$msg = (string)$args['msg'];
		error_log("hello: $msg");
	}}
}


controller TestController {

	path global {
		user_id = session.current_user;
		validate user_id as int;
		current_user = model? UserModel id=user_id;
	}

	path "/test/login/{{username}}" {
		user = model? UserModel username=username;
		if (user) {
			session.current_user = user.id;
			render MessageTemplate message="logged in";
		} else {
			render MessageTemplate message="no such user found";
		}
	}

	path "/test/create_user/{{username}}" {
		user = action create_user username=username;
		render MessageTemplate message="created user";
	}


	path "/test/logout" {
		if (current_user) {
			session.current_user = 0;
			render MessageTemplate message="logged out";
		} else {
			render MessageTemplate message="not logged in";
		}
	}


	path "/test/user" {
		if (current_user) {
			render UserViewTemplate user=current_user;
		} else {
			render MessageTemplate message="not logged in";
		}
	}



	validator int {{
		return (int)$value;
	}}

	action create_user {{
		$username = (string)$args['username'];
		error_log("creating user '$username'");

		$user = UserModel::create(array('username' => $username));
		return $user;
	}}
}

